---
- name: PLAY BOOTSTRAP
  hosts: all
  become: true
  
  vars_files:
    - vars-bootstrap-playbook.yaml
        
#  vars:
#    liste_users: 
#      testuser1:
#        state: present
#        shell: /bin/bash
#        comment: "User Test1"
#      testuser2:
#        state: present
#        shell: /sbin/nologin
#      pierre:
#        state: present
#      gege:
              
  
  tasks:
    # Utilisation module RAW pour vérifier et tenter d'installer l'interpréteur python3
    - name: Verification interpreteur python
      raw: 'bash -c "test -f /usr/bin/python3"'
      ignore_errors: true
      # Enregistrement de l'output du module dans une variable
      register: test_python_output
      
    - name: Analyse de la donnée test_pyton_output
      ansible.builtin.debug:
        #msg: "{{ test_python_output }}" 
        var: test_python_output
        verbosity: 2
        
    # Tente une install python quand le code retour de test_python3_output n'est pas à 0
    # Conditionnals
    - name: Tentative d'installation python3
      raw: 'bash -c "(apt get update && apt install -y python3) || (yum install -y python3)"'
      when: test_python_output.rc != 0
      
      
      
    
    # Tasks communes une fois que les prérequis python est satisfait    
    - name: Creation d'un user standard avec groupe sudo, wheel
      ansible.builtin.user:
        name: formation
        state: present
        shell: /bin/bash
        groups: "{{ sudogrp }}"
        
    - name: Creation d'utilisateurs standards
      ansible.builtin.user: 
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('absent') }}"
        shell: "{{ item.value.shell | default('/bin/bash') }}"
        comment: "{{ item.value.comment | default(omit) }}"
        password: "{{ lookup ('password', 'credentials' 
          + '/' + inventory_hostname + '/'
          + item.key 
          + '.password length=15') | password_hash('sha512') }}"
        update_password: on_create
      loop: "{{ liste_users | dict2items}}"
        