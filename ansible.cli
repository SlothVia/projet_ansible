# Lancement du premier playbook 
$ ansible-playbook -i hosts -u vianney premier_playbook.yaml
$ ansible-playbook -i hosts -u vianney premier_playbook.yaml --limit client

# Arguments supplémentaires au lancement du playbook
$ ansible-playbook premier_playbook.yaml --check
$ ansible-playbook premier_playbook.yaml --list-tasks
$ ansible-playbook premier_playbook.yaml --limit client

# Installation du linter ansible dans le virtualenv
pip install ansible-lint
pip install ansible-lint==4.3.7
# ansible-lint bootstrap-playbook.yaml

# Gestion de l'inventaire
$ ansible-inventory -i hosts --list -y
$ ansible-inventory -i hosts --graph

# Lancement de bootstrap-playbook
$ ansible-playbook bootstrap-playbook.yaml

# Boucles loop
https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html

# Variables spéciales :
https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html


# Module debug et verbosity 
$ ansible-playbook demol_loop_playbook.yaml -vv

# Les facts
Un task automatique au lancement d'un playbook : TASK [GATHERING FACTS]
Un module : setup
$ ansible -m ansible.builtin.setup client -a "filter='user'"
$ ansible -m ansible.builtin.setup centos01 -a "filter='user'"

# Conditionnals : 
https://docs.ansible.com/ansible/latest/user_guide/playbooks_conditionals.html
https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html

# Mot de passe et vault
1°) Définition du mot de passe directement en variable et hash à l'appel du module user
2°) Génération d'un mot de passe hashé puis utilisation dans une variable
$ ansible -i hosts srv01 -m debug -a "msg={{ 'deploy123' | password_hash('sha512', 'password') }}"

